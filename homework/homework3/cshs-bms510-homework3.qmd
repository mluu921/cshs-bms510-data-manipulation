---
title: "Homework #3 - ggplot2"
date: today
format: html
self-contained: true
toc: true
params:
  include_plots: F
execute: 
  echo: false
  warning: false
  message: false
---


```{r}

library(tidyverse)

## read in the dataset

df <- readxl::read_excel(here::here('data/emergency.xlsx'), sheet = 1) ## part 1 and part 3 dataset

## convert categorical vars into factors
df <- df %>%
  mutate(
    gender = factor(gender, levels = 0:1, labels = c('Female', 'Male')),
    ascites = factor(ascites, levels = 0:1, labels = c('No', 'Yes')),
    encephalopathy = factor(encephalopathy, levels = 0:1, labels = c('No', 'Yes')),
    child = factor(child, levels = 0:2, labels = c('A', 'B', 'C')),
    death = factor(death, levels = 0:1, labels = c('No', 'Yes')),
    infection = factor(infection, levels = 0:1, labels = c('No', 'Yes'))
  )

```

# Homework Submission Information

**Deadline**: March 1, 2022 (Tuesday)

**Format**: HTML

**Submit to**: [michael.luu\@cshs.org](mailto:michael.luu@cshs.org){.email}

# Instructions

There will be three parts to this homework. Part 1 of the homework involves constructing four different plots, then merging the 4 plots into a single figure like how it was shown in class. This is something that will be commonly performed during your academic career in preparation of manuscripts for publications. Part 2 of the homework involves comparing the distribution of diastolic blood pressure and systolic blood pressure by infection status. Part 3 involves constructing a 'profile plot', where we are observing the trends in mean tumor volume across time.

As an additional tidbit, if you want to modify the dimension of your figure within the output of R markdown - please include fig.width, and fig.height within the header of the chunk. For example, {r, fig.width = 6, fig.height = 4} will output the figure within the chunk as 4 inches (width) by 6 inches (height)

Part 1 and 2 will involve using the **emergency dataset**. and Part 3 will involve using the **vaccine dataset**

# Part 1

Part 1 involves constructing the four primary plots that we went over in class. The classic dot plot, box plot, bar plot, and histogram. Afterward please merge them together to form a single figure.

## Dotplot

For the classic dot plot, please construct a vertical dot plot showing the distribution of **heart rate** between gender (Female vs Male). Please also overlay a line showing the **mean** and **median** heart rate for male and females.

```{r, include = params$include_plots}

temp <- df

p1 <- ggplot(temp, aes(x = gender, y = hr)) +
  geom_dotplot(
    binaxis = 'y',
    binwidth = 1,
    method = 'histodot',
    stackdir = 'center'
  ) +
  stat_summary(
    fun.ymin = 'median',
    fun.ymax = 'median',
    geom = 'errorbar',
    color = 'red',
    size = 1,
    width = .5
  ) +
  stat_summary(
    fun.ymin = 'mean',
    fun.ymax = 'mean',
    geom = 'errorbar',
    color = 'blue',
    size = 1,
    width = .5
  ) +
  theme_bw() +
  theme(axis.title = element_text(face = 'bold', size = 15),
        panel.grid.major.x = element_blank()) +
  labs(x = 'Gender', y = 'Heart Rate')

p1
```

## Boxplot

For the classic box plot, please construct a box plot comparing the **age** of **Female** with and without **infection** and **Male** with and without **infection.** Please also overlay **jittered** points in addition to the box plot. Please make this plot without the use of a facet or patchwork etc, it should be on a single panel. e.g. 2 boxplots side by side for Female (Infection Yes vs Infection No) and 2 boxplots side by side for Male (Infection Yes vs Infection No) within a single panel.

```{r, include = params$include_plots}
temp <- df

p2 <- ggplot(temp, aes(x = gender, y = age, fill = infection)) + 
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(position = position_jitterdodge(jitter.width = .1), alpha = .5) +
  theme_bw() + 
  theme(
    legend.position = 'bottom',
    panel.grid.major.x = element_blank(),
        axis.title = element_text(face = 'bold', size = 15)
  ) + 
  labs(x = 'Gender', y = 'Age') + 
  scale_fill_brewer('Infection', palette = 'Set1')

p2
```

## Barplot

For the classic bar plot, please compare the **percent** of each CHILD score between gender. There should be separate bars for each CHILD score (A, B, and C) for Female and Male. The height of the bar should depict the **percent** for each gender. **In addition to the bar plot, please also overlay the actual count and proportion on each bar as shown in the notes and in class**. Please construct this plot on a single panel without the use of facets. e.g. 3 bars for Female (CHILD A, B, and C) and 3 bars for Male (CHILD A, B, and C).

```{r, include = params$include_plots}
temp <- df

temp <- temp %>%
  group_by(., gender, child) %>%
  summarise(., n = n()) %>%
  filter(., !is.na(child)) %>%
  mutate(., percent = n / sum(n)) 

p3 <- ggplot(temp, aes(x=gender, y = percent, fill = child)) +
  geom_bar(stat = 'identity', position = position_dodge(.9)) +
  geom_text(aes(label = n, y = percent / 2), position = position_dodge(width = .9), color = 'white') +
  geom_text(aes(label = paste0(round(percent*100), '%'), y = percent + .02), position = position_dodge2(width = .9)) +
  scale_y_continuous(labels = scales::percent) +
  theme_bw() +
  scale_fill_brewer('CHILD', palette = 'Set1') +
  theme(
  legend.position = 'bottom',
  panel.grid = element_blank(),
  legend.background = element_rect(fill = 'transparent'),
        axis.title = element_text(face = 'bold', size = 15)
  ) +
  labs(x='Gender', y = '%')

p3
```

## Histogram

For the classic histogram, please construct a histogram of **length of stay** for **Female** and **Male** in separate panels.

```{r, include = params$include_plots}

temp <- df

p4 <- ggplot(temp, aes(x = los, fill = gender)) +
  geom_histogram() +
  theme_bw() +
  scale_x_continuous(breaks = seq(0, 100, 5)) +
  facet_grid(gender~.) +
  labs(x = 'Length of Stay', y = 'n') +
  scale_fill_brewer('Gender', palette = 'Set1') +
  theme(legend.position = 'none',
        panel.grid = element_blank(),
        axis.title = element_text(face = 'bold', size = 15))

p4
```

## Merged Plot

Please merge the 4 plots that we constructed into a single labeled plot as was shown in class and in the notes.

```{r, fig.height=8, fig.width=12, include = params$include_plots}
pg <- cowplot::plot_grid(p1, p2, p3, p4, labels = 'AUTO', nrow = 2)

pg
```

# Part 2

## Part 2A

Part 2A involves constructing a box plot comparing the **diastolic blood pressure** and **systolic blood pressure** between **infection** status. You should construct this plot in a **single panel** without the use of facets. There should be 2 box plots (Infection Yes vs Infection No) for diastolic blood pressure and 2 box plots (Infection Yes vs Infection No) for systolic blood pressure. Please also overlay jittered points on top of the boxplots.

```{r, include = params$include_plots}

temp <- df

temp <- temp %>%
  select(., id, infection, sbp, dbp) %>%
  pivot_longer(., sbp:dbp)

temp %>%
  ggplot(., aes(x = name, y = value, color = infection)) +
  geom_boxplot() +
  geom_jitter(position = position_jitterdodge()) +
  theme_bw() +
  theme(
    legend.position = 'bottom',
    axis.title = element_text(face = 'bold'),
    axis.title.x = element_blank()
  ) +
  labs(y = 'mm Hg') +
  scale_color_brewer('Infection Status', palette = 'Set1') +
  scale_x_discrete(labels = c('Diastolic Blood Pressure', 'Systolic Blood Pressure'))

```

## Part 2B

Similar to Part 2A, Part 2B involves constructing a **bar plot** comparing **diastolic blood pressure** and **systolic blood pressure** between **infection** status. The height of the barplots should depict the mean and please overlay errorbars for the standard error. I have provided a function below to calculate the standard error. Please copy this function into your RMD, run it, and then you will have access to this function `se()`. You should construct this plot in a **single panel** without the use of facets. There should be 2 bar plots (Infection Yes vs Infection No) for diastolic blood pressure and 2 bar plots (Infection Yes vs Infection No) for systolic blood pressure.

```{r, echo = T}
se <- function(x, na.rm = T) sqrt(var(x, na.rm = na.rm)/length(x))
```

```{r, include = params$include_plots}
temp <- df

temp <- temp %>%
  select(., id, infection, sbp, dbp) %>%
  pivot_longer(., sbp:dbp)

temp %>% 
  group_by(infection, name) %>%
  summarise(
    mean = mean(value, na.rm = T),
    se = se(value, na.rm = T)
  ) %>%
  ggplot(., aes(x = name, y = mean, fill = infection)) + 
  geom_errorbar(aes(ymin = mean - se, ymax = mean + se), position = position_dodge(width = .9), width = .5) +
  geom_col(position = position_dodge()) + 
  theme_bw() + 
  theme(legend.position = 'bottom',
        axis.title = element_text(face = 'bold'),
        axis.title.x = element_blank()) +
  labs(y = 'mm Hg') + 
  scale_fill_brewer('Infection Status', palette = 'Set1') + 
  scale_x_discrete(labels = c('Diastolic Blood Pressure', 'Systolic Blood Pressure'))



```

## Part 2C

Now that you have both 2A and 2B completed, and it's time to submit your figure to the journal for publication. Please write a small statement on which figure you will choose to submit. Please compare and constrasts the two figures, and provide evidence to support your decision.

# Part 3

Part 3 of the assignment involves constructing a 'profile plot'. This will be using a different data set than the emergency data set that can be found in the box folder. You will be constructing this plot to observe the change in mean tumor volume across time. In constructing your plot, there should be a different panel for Ad-GFP and Ad-HER3. Within each of the panel, you will be plotting the **mean** tumor volume among IgG, anti-PD1, and anti-PD-L1 at each time point. In addition to plotting the mean tumor volume, you will also plot the **standard errors** at each time point. Since R does not include a built in function to calculate the standard error, I have provided the function below that you can use.

```{r, echo = T}
se <- function(x, na.rm = T) sqrt(var(x, na.rm = T)/length(x))
```

Copy this line of code into your R environment, run it, and you should be able to calculate the standard error using `se()`

```{r, include = params$include_plots, fig.height=10, fig.width=10}

se <- function(x) sqrt(var(x)/length(x))

df2 <- readxl::read_excel(here::here('data/vaccine2.xlsx'), sheet = 1) %>% janitor::clean_names() ## part 2 dataset

temp <- df2

temp <- temp %>%
  pivot_longer(., t0:t25) %>%
  mutate(
    name = factor(name, levels = c('t0', 't4', 't7', 't11', 't14', 't18', 't21', 't25'))
  ) %>%
  group_by(., vaccine, treatment, name) %>%
  summarise(., mean = mean(value), se = se(value))

ggplot(temp, aes(x = name, y = mean, color = treatment)) + 
  facet_wrap(~vaccine, ncol = 1, scales = 'free_y') +
  geom_point(size = 2) + 
  geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = .25) +
  geom_line(aes(group = treatment)) +
  labs(x = 'Time point', y = 'Average Tumor Volume') +
  scale_color_brewer('Treatment', palette = 'Set1') +
  theme_bw() +
  theme(
    legend.position = 'bottom',
    panel.grid.minor = element_blank(),
    axis.title = element_text(face = 'bold', size = 15)
  )



```
